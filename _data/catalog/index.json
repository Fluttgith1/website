[
  {
    "name": "Basics",
    "description": "Widgets you absolutely need to know before building your first Flutter app.",
    "priority": "high",
    "id":"basics"
  },
  {
    "name": "Material Design",
    "description": "Flutter implements many of the UI components from Googleâ€™s <a href=\"https://material.io/guidelines/material-design/introduction.html\">Material Design guidelines</a>.",
    "subcategories": [
      {
        "name": "App structure and navigation"
      },
      {
        "name": "Buttons"
      },
      {
        "name": "Input and selections"
      },
      {
        "name": "Dialogs, alerts, and panels"
      },
      {
        "name": "Information displays"
      },
      {
        "name": "Layout"
      }
    ],
    "id":"material"
  },
  {
    "name": "Cupertino (iOS-style widgets)",
    "description": "Flutter widgets implementing the current iOS design language.",
    "id":"cupertino"
  },
  {
    "name": "Layout",
    "description": "The following widgets allow you to arrange their child or children into columns, rows, grids, and many other layouts.",
    "subcategories": [
      {
        "name": "Single-child layout widgets",
        "description": "These widgets take a single child and manipulate the layout of the child."
      },
      {
        "name": "Multi-child layout widgets",
        "description":"These widgets take multiple children and arrange them in different ways."
      },
      {
        "name": "Layout helpers"
      }
    ],
    "id":"layout"
  },
  {
    "name": "Text",
    "description": "The following widgets are used to display and style text.",
    "id":"text"
  },
  {
    "name": "Assets, Images, and Icons",
    "description": "The following widgets manage assets, display images, and show icons.",
    "id":"assets"
  },
  {
    "name": "Input",
    "description": "The following widgets are used to take user input in addition to input widgets in in Material Design and Cupertino.",
    "id":"input"
  },
  {
    "name": "Animation and Motion",
    "description": "The following widgets bring animations to your app. Check out Animations in Flutter for an overview.",
    "id":"animation"
  },
  {
    "name": "Interaction Models",
    "description": "The following widgets allows your app to respond to touch events and route users to different views.",
    "subcategories": [
      {
        "name": "Touch interactions"
      },
      {
        "name": "Routing"
      }
    ],
    "id":"interaction"
  },
  {
    "name": "Styling",
    "description": "The following widgets allow you to manage the theme of your app, makes your app responsive to screen sizes, or add padding.",
    "id":"styling"
  },
  {
    "name": "Painting and effects",
    "description": "These widgets apply visual effects to the children without changing their layout, size, or position.",
    "id":"painting"
  },
  {
    "name": "Accessibility",
    "description": "The following widgets help make your app accessible.",
    "id":"accessibility"
  },
  {
    "name": "Async",
    "description": "These widgets allow you to add async patterns to your flutter application.",
    "id":"async"
  },
  {
    "name": "Scrolling",
    "description": "The following widgets allow you to scroll multiple widgets as children of the parent.",
    "id":"scrolling"
  }
]