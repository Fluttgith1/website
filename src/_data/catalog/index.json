[
  {
    "name": "Basics",
    "description": "Widgets you absolutely need to know before building your first Flutter app.",
    "priority": "high",
    "id": "basics"
  },
  {
    "name": "Material components",
    "description": "Visual, behavioral, and motion-rich widgets implementing the Material 3 design specification.",
    "subcategories": [
      {
        "name": "Actions",
        "color": "#D9E7CB"
      },
      {
        "name": "Communication",
        "color": "#F9DBDA"
      },
      {
        "name": "Containment",
        "color": "#F9DBDA"
      },
      {
        "name": "Navigation",
        "color": "#E5E4C2"

      },
      {
        "name": "Selection",
        "color": "#D9E7CB"

      },
      {
        "name": "Text input",
        "color": "#E5E4C2"
      }
    ],
    "id": "material"
  },
  {
    "name": "Material 2 components",
    "description": "Widgets implementing the Material 2 design guidelines.",
    "subcategories": [
      {
        "name": "App structure and navigation"
      },
      {
        "name": "Buttons"
      },
      {
        "name": "Input and selections"
      },
      {
        "name": "Dialogs, alerts, and panels"
      },
      {
        "name": "Information displays"
      },
      {
        "name": "Layout"
      }
    ],
    "id": "material2"
  },  
  {
    "name": "Cupertino (iOS-style widgets)",
    "description": "Beautiful and high-fidelity widgets for current iOS design language.",
    "id": "cupertino"
  },
  {
    "name": "Layout",
    "description": "Arrange other widgets columns, rows, grids, and many other layouts.",
    "subcategories": [
      {
        "name": "Single-child layout widgets",
        "description": "These widgets take a single child and manipulate the layout of the child."
      },
      {
        "name": "Multi-child layout widgets",
        "description": "These widgets take multiple children and arrange them in different ways."
      }, 
      {
        "name": "Sliver widgets", 
        "description": "These widgets take a portion of a CustomScrollView and apply a layout to that portion."
      }
    ],
    "id": "layout"
  },
  {
    "name": "Text",
    "description": "Display and style text.",
    "id": "text"
  },
  {
    "name": "Assets, Images, and Icons",
    "description": "Manage assets, display images, and show icons.",
    "id": "assets"
  },
  {
    "name": "Input",
    "description": "Take user input in addition to input widgets in Material components and Cupertino.",
    "id": "input"
  },
  {
    "name": "Animation and Motion",
    "description": "Bring animations to your app.",
    "id": "animation"
  },
  {
    "name": "Interaction Models",
    "description": "Respond to touch events and route users to different views.",
    "subcategories": [
      {
        "name": "Touch interactions"
      },
      {
        "name": "Routing"
      }
    ],
    "id": "interaction"
  },
  {
    "name": "Styling",
    "description": "Manage the theme of your app, makes your app responsive to screen sizes, or add padding.",
    "id": "styling"
  },
  {
    "name": "Painting and effects",
    "description": "These widgets apply visual effects to the children without changing their layout, size, or position.",
    "id": "painting"
  },
  {
    "name": "Async",
    "description": "Async patterns to your Flutter application.",
    "id": "async"
  },
  {
    "name": "Scrolling",
    "description": "Scroll multiple widgets as children of the parent.",
    "id": "scrolling"
  },
  {
    "name": "Accessibility",
    "description": "Make your app accessible.",
    "id": "accessibility"
  }
]
